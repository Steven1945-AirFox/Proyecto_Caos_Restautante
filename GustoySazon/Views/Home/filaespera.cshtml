@model GustoySazon.Models.FilaEsperaViewModel

@{
    ViewBag.Title = "Fila de Espera - Gusto y Sazón";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link href="~/Content/ClienteFilaEspera.css" rel="stylesheet" />



    <style>
        .tabla-espera {
            background-color: #FFFCF8; /* Fondo blanco crema más claro */
            border-radius: 16px;
            padding: 30px;
            box-shadow: 0 6px 30px rgba(0, 0, 0, 0.08);
            margin-bottom: 35px;
            border: 1px solid #F5EDE3;
        }

        .table-title {
            color: #6D5C4D; /* Café más oscuro para mejor contraste */
            font-size: 2.1rem;
            margin-bottom: 25px;
            text-align: center;
            font-weight: 600;
            letter-spacing: 0.8px;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.05);
        }

        .posicion-info {
            text-align: center;
            padding: 20px;
        }

            .posicion-info p {
                color: #7A6A5F;
                font-size: 1.3rem;
                margin-bottom: 15px;
                line-height: 1.6;
            }

            .posicion-info strong {
                color: #9C7C5B; /* Dorado café más cálido */
                font-weight: 600;
                font-size: 1.4rem;
            }

        .tiempo-espera {
            color: #8B6D4D; /* Tono dorado más intenso */
            font-size: 1.4rem;
            font-weight: 500;
            padding: 3px 8px;
            background-color: #FFF9F0;
            border-radius: 4px;
            border: 1px solid #F0E6D8;
        }

        /* Efecto de transición suave para hover */
        .tabla-espera:hover {
            transform: translateY(-2px);
            transition: transform 0.3s ease;
            box-shadow: 0 8px 35px rgba(0, 0, 0, 0.12);
        }
    </style>



</head>
<body>
    <div class="pagina">
        <div class="tablas">






            <div class="tabla-espera">
                <h2 class="table-title">Tu posición en la fila</h2>
                <div class="posicion-info">
                    <p>Hola, <strong>@Model.NombreUsuarioActual</strong></p>
                    <p>Tu posición actual en la fila es: <strong>#@Model.PosicionEnFila</strong></p>
                    <p>Tiempo en Fila: <span class="tiempo-espera" data-horaregistro="@Model.HoraRegistroUsuario.ToString("o")">0</span> segundos</p>
                </div>
            </div>







            @*
        <div class="tabla-espera">
            <h2 class="table-title">Lista de Espera</h2>
            <table>
                <thead>
                    <tr>
                        <th>Nombre Cliente</th>
                        <th>Tiempo en sesión (s)</th>
                    </tr>
                </thead>
                <tbody id="tabla-clientes">
                    @foreach (var cliente in Model.ClientesEnEspera)
                    {
                        <tr>
                            <td>@cliente.Nombre</td>
                            <td class="tiempo-espera" data-horaregistro="@cliente.HoraRegistro.ToString("o")">0</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>*@

            <div class="tabla-mesas">
                <h2 class="table-title">Mesas Disponibles</h2>

                <div class="mesas-contenedor">
                    @foreach (var mesa in Model.MesasDisponibles)
                    {
                        <div class="mesa-tarjeta">
                            <div class="mesa-tarjeta">
                                <div class="icono-mesa"></div>

                                <div class="info-mesa">
                                    <p><strong>Mesa:</strong> @mesa.NumeroMesa</p>
                                    <p><strong>Capacidad:</strong> @mesa.Sillas</p>
                                    <p><strong>Ubicación:</strong> @mesa.Ubicacion</p>
                                    <p><strong>Estado:</strong> @mesa.Estado</p>
                                    <p><strong>Sillas disponibles:</strong> @(mesa.Sillas - mesa.Ocupantes) / @mesa.Sillas</p>
                                </div>




                                <!--unirse o no a mesas con clientes-->
                                <div class="botones-mesa">
                                    @if (mesa.Estado == "Libre" || (mesa.Estado == "Ocupada" && mesa.Ocupantes < mesa.Sillas))
                                    {
                                        <form method="post" action="@Url.Action("AsignarMesa", "Home")">
                                            <input type="hidden" name="usuarioId" value="@Model.UsuarioIdActual" />
                                            <input type="hidden" name="mesaId" value="@mesa.Id" />
                                            <button type="submit" class="btn">Unirse</button>
                                        </form>
                                    }
                                    else
                                    {
                                        <button class="btn" disabled>No disponible</button>
                                    }
                                    <button class="btn info-btn" data-mesaid="@mesa.Id">¡</button>
                                </div>
                            </div>

                        </div>
                    }
                </div>
            </div>
        </div>
    </div>





    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // Actualizar tiempo en espera cada segundo
        /*function actualizarTiempos() {
            $('.tiempo-espera').each(function () {
                var horaRegistro = new Date($(this).data('horaregistro'));
                var ahora = new Date();
                var diffSegundos = Math.floor((ahora - horaRegistro) / 1000);
                $(this).text(diffSegundos >= 0 ? diffSegundos : 0);
            });
        }


        actualizarTiempos();
        setInterval(actualizarTiempos, 1000);*/



        // Función original del contador que ya funcionaba
        function actualizarTiempos() {
            $('.tiempo-espera').each(function () {
                var horaRegistro = new Date($(this).data('horaregistro'));
                var ahora = new Date();
                var diffSegundos = Math.floor((ahora - horaRegistro) / 1000);
                $(this).text(diffSegundos >= 0 ? diffSegundos : 0);
            });
        }

        // Iniciar el contador igual que antes
        actualizarTiempos();
        setInterval(actualizarTiempos, 1000);









        //mostrar usuarios en la mesa
        $('.info-btn').click(function () {
            var mesaId = $(this).data('mesaid');

            $.ajax({
                url: '@Url.Action("ObtenerClientesMesa", "Home")',
                data: { mesaId: mesaId },
                success: function (data) {
                    if (data.length === 0) {
                        alert('No hay nadie sentado en esta mesa.');
                        return;
                    }

                    var mensaje = 'Usuarios en la mesa:\n';
                    data.forEach(function (cliente) {
                        mensaje += cliente.Nombre + '\n';
                    });

                    alert(mensaje);
                },
                error: function () {
                    alert('Error al obtener datos de la mesa.');
                }
            });
        });


    </script>
</body>
</html>


